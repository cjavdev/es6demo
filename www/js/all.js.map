{"version":3,"sources":["app.js","controllers.js","services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["// Ionic Starter App\n\n// angular.module is a global place for creating, registering and retrieving Angular modules\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\n// the 2nd parameter is an array of 'requires'\n// 'starter.services' is found in services.js\n// 'starter.controllers' is found in controllers.js\nangular.module('starter', ['ionic', 'starter.controllers', 'starter.services'])\n\n.run(($ionicPlatform) => {\n  $ionicPlatform.ready(() => {\n    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n    // for form inputs)\n    if (window.cordova && window.cordova.plugins.Keyboard) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n    if (window.StatusBar) {\n      // org.apache.cordova.statusbar required\n      StatusBar.styleDefault();\n    }\n  });\n})\n\n.config(($stateProvider, $urlRouterProvider) => {\n\n  // Ionic uses AngularUI Router which uses the concept of states\n  // Learn more here: https://github.com/angular-ui/ui-router\n  // Set up the various states which the app can be in.\n  // Each state's controller can be found in controllers.js\n  $stateProvider\n\n  // setup an abstract state for the tabs directive\n    .state('tab', {\n    url: \"/tab\",\n    abstract: true,\n    templateUrl: \"templates/tabs.html\"\n  })\n\n  // Each tab has its own nav history stack:\n\n  .state('tab.dash', {\n    url: '/dash',\n    views: {\n      'tab-dash': {\n        templateUrl: 'templates/tab-dash.html',\n        controller: 'DashCtrl'\n      }\n    }\n  })\n\n  .state('tab.chats', {\n      url: '/chats',\n      views: {\n        'tab-chats': {\n          templateUrl: 'templates/tab-chats.html',\n          controller: 'ChatsCtrl'\n        }\n      }\n    })\n    .state('tab.chat-detail', {\n      url: '/chats/:chatId',\n      views: {\n        'tab-chats': {\n          templateUrl: 'templates/chat-detail.html',\n          controller: 'ChatDetailCtrl'\n        }\n      }\n    })\n\n  .state('tab.friends', {\n      url: '/friends',\n      views: {\n        'tab-friends': {\n          templateUrl: 'templates/tab-friends.html',\n          controller: 'FriendsCtrl'\n        }\n      }\n    })\n    .state('tab.friend-detail', {\n      url: '/friend/:friendId',\n      views: {\n        'tab-friends': {\n          templateUrl: 'templates/friend-detail.html',\n          controller: 'FriendDetailCtrl'\n        }\n      }\n    })\n\n  .state('tab.account', {\n    url: '/account',\n    views: {\n      'tab-account': {\n        templateUrl: 'templates/tab-account.html',\n        controller: 'AccountCtrl'\n      }\n    }\n  });\n\n  // if none of the above states are matched, use this as the fallback\n  $urlRouterProvider.otherwise('/tab/dash');\n\n});\n\nclass Snowman {\n  constructor (name) {\n    this.name = name;\n  }\n\n  sayHi() {\n    console.log(this.name);\n  }\n}\n\nvar olaf = new Snowman('Olaf');\nolaf.sayHi();\n","angular.module('starter.controllers', [])\n\n.controller('DashCtrl', function($scope) {})\n\n.controller('ChatsCtrl', function($scope, Chats) {\n  $scope.chats = Chats.all();\n  $scope.remove = function(chat) {\n    Chats.remove(chat);\n  }\n})\n\n.controller('ChatDetailCtrl', function($scope, $stateParams, Chats) {\n  $scope.chat = Chats.get($stateParams.chatId);\n})\n\n.controller('FriendsCtrl', function($scope, Friends) {\n  $scope.friends = Friends.all();\n})\n\n.controller('FriendDetailCtrl', function($scope, $stateParams, Friends) {\n  $scope.friend = Friends.get($stateParams.friendId);\n})\n\n.controller('AccountCtrl', function($scope) {\n  $scope.settings = {\n    enableFriends: true\n  };\n});\n","angular.module('starter.services', [])\n\n.factory('Chats', function() {\n  // Might use a resource here that returns a JSON array\n\n  // Some fake testing data\n  var chats = [{\n    id: 0,\n    name: 'Ben Sparrow',\n    lastText: 'You on your way?',\n    face: 'https://pbs.twimg.com/profile_images/514549811765211136/9SgAuHeY.png'\n  }, {\n    id: 1,\n    name: 'Max Lynx',\n    lastText: 'Hey, it\\'s me',\n    face: 'https://avatars3.githubusercontent.com/u/11214?v=3&s=460'\n  }, {\n    id: 2,\n    name: 'Andrew Jostlin',\n    lastText: 'Did you get the ice cream?',\n    face: 'https://pbs.twimg.com/profile_images/491274378181488640/Tti0fFVJ.jpeg'\n  }, {\n    id: 3,\n    name: 'Adam Bradleyson',\n    lastText: 'I should buy a boat',\n    face: 'https://pbs.twimg.com/profile_images/479090794058379264/84TKj_qa.jpeg'\n  }, {\n    id: 4,\n    name: 'Perry Governor',\n    lastText: 'Look at my mukluks!',\n    face: 'https://pbs.twimg.com/profile_images/491995398135767040/ie2Z_V6e.jpeg'\n  }];\n\n  return {\n    all: function() {\n      return chats;\n    },\n    remove: function(chat) {\n      chats.splice(chats.indexOf(chat), 1);\n    },\n    get: function(chatId) {\n      for (var i = 0; i < chats.length; i++) {\n        if (chats[i].id === parseInt(chatId)) {\n          return chats[i];\n        }\n      }\n      return null;\n    }\n  }\n})\n\n/**\n * A simple example service that returns some data.\n */\n.factory('Friends', function() {\n  // Might use a resource here that returns a JSON array\n\n  // Some fake testing data\n  // Some fake testing data\n  var friends = [{\n    id: 0,\n    name: 'Ben Sparrow',\n    notes: 'Enjoys drawing things',\n    face: 'https://pbs.twimg.com/profile_images/514549811765211136/9SgAuHeY.png'\n  }, {\n    id: 1,\n    name: 'Max Lynx',\n    notes: 'Odd obsession with everything',\n    face: 'https://avatars3.githubusercontent.com/u/11214?v=3&s=460'\n  }, {\n    id: 2,\n    name: 'Andrew Jostlen',\n    notes: 'Wears a sweet leather Jacket. I\\'m a bit jealous',\n    face: 'https://pbs.twimg.com/profile_images/491274378181488640/Tti0fFVJ.jpeg'\n  }, {\n    id: 3,\n    name: 'Adam Bradleyson',\n    notes: 'I think he needs to buy a boat',\n    face: 'https://pbs.twimg.com/profile_images/479090794058379264/84TKj_qa.jpeg'\n  }, {\n    id: 4,\n    name: 'Perry Governor',\n    notes: 'Just the nicest guy',\n    face: 'https://pbs.twimg.com/profile_images/491995398135767040/ie2Z_V6e.jpeg'\n  }];\n\n\n  return {\n    all: function() {\n      return friends;\n    },\n    get: function(friendId) {\n      // Simple index lookup\n      return friends[friendId];\n    }\n  }\n});\n"],"sourceRoot":"/source/"}